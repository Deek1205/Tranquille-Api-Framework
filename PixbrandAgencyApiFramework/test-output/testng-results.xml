<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-28T08:14:50Z" name="Default suite" finished-at="2022-08-28T08:15:09Z" duration-ms="18870">
    <groups>
    </groups>
    <test started-at="2022-08-28T08:14:50Z" name="Default test" finished-at="2022-08-28T08:15:09Z" duration-ms="18870">
      <class name="com.pixbrandtestcases.TranquilleTestcases">
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:50Z" name="setUpReport" finished-at="2022-08-28T13:44:50Z" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="GetCountry()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:50Z" name="GetCountry" finished-at="2022-08-28T13:44:57Z" duration-ms="6383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCountry -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:57Z" name="afterMethod" finished-at="2022-08-28T13:44:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetCountry status=SUCCESS method=TranquilleTestcases.GetCountry()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:57Z" name="setUpReport" finished-at="2022-08-28T13:44:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetLanguage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="GetLanguage()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:57Z" name="GetLanguage" finished-at="2022-08-28T13:44:59Z" duration-ms="1911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetLanguage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:59Z" name="afterMethod" finished-at="2022-08-28T13:44:59Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetLanguage status=SUCCESS method=TranquilleTestcases.GetLanguage()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetLanguage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="GetServices()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:59Z" name="GetServices" finished-at="2022-08-28T13:45:00Z" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetServices -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:44:59Z" name="setUpReport" finished-at="2022-08-28T13:44:59Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetServices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:00Z" name="afterMethod" finished-at="2022-08-28T13:45:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetServices status=SUCCESS method=TranquilleTestcases.GetServices()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.GetServices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:00Z" name="setUpReport" finished-at="2022-08-28T13:45:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegistration()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="vendorRegistration()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:00Z" name="vendorRegistration" finished-at="2022-08-28T13:45:02Z" duration-ms="2644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorRegistration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:02Z" name="afterMethod" finished-at="2022-08-28T13:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorRegistration status=SUCCESS method=TranquilleTestcases.vendorRegistration()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegistration()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:02Z" name="setUpReport" finished-at="2022-08-28T13:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorregisterThree()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="vendorregisterThree()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:02Z" name="vendorregisterThree" finished-at="2022-08-28T13:45:04Z" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorregisterThree -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:04Z" name="afterMethod" finished-at="2022-08-28T13:45:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorregisterThree status=SUCCESS method=TranquilleTestcases.vendorregisterThree()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorregisterThree()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:04Z" name="setUpReport" finished-at="2022-08-28T13:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterWorkDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="vendorRegisterWorkDemo()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:04Z" name="vendorRegisterWorkDemo" finished-at="2022-08-28T13:45:04Z" duration-ms="987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorRegisterWorkDemo -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:04Z" name="afterMethod" finished-at="2022-08-28T13:45:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorRegisterWorkDemo status=SUCCESS method=TranquilleTestcases.vendorRegisterWorkDemo()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterWorkDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:04Z" name="setUpReport" finished-at="2022-08-28T13:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="vendorRegisterLogo()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:05Z" name="vendorRegisterLogo" finished-at="2022-08-28T13:45:07Z" duration-ms="2431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorRegisterLogo -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:07Z" name="afterMethod" finished-at="2022-08-28T13:45:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorRegisterLogo status=SUCCESS method=TranquilleTestcases.vendorRegisterLogo()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="vendorRegisterLocation()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:07Z" name="vendorRegisterLocation" finished-at="2022-08-28T13:45:08Z" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorRegisterLocation -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:07Z" name="setUpReport" finished-at="2022-08-28T13:45:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:08Z" name="afterMethod" finished-at="2022-08-28T13:45:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorRegisterLocation status=SUCCESS method=TranquilleTestcases.vendorRegisterLocation()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorRegisterLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpReport(java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:08Z" name="setUpReport" finished-at="2022-08-28T13:45:08Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorTreatments()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method signature="vendorTreatments()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:08Z" name="vendorTreatments" finished-at="2022-08-28T13:45:09Z" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vendorTreatments -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:09Z" name="afterMethod" finished-at="2022-08-28T13:45:09Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vendorTreatments status=SUCCESS method=TranquilleTestcases.vendorTreatments()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.pixbrandtestcases.TranquilleTestcases.vendorTreatments()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpFlushed()[pri:0, instance:com.pixbrandtestcases.TranquilleTestcases@71e693fa]" started-at="2022-08-28T13:45:09Z" name="setUpFlushed" finished-at="2022-08-28T13:45:09Z" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpFlushed -->
      </class> <!-- com.pixbrandtestcases.TranquilleTestcases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
